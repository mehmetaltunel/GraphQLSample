// <auto-generated />
using System;
using GraphQL.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GraphQL.DataAcess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230405131217_firstMig")]
    partial class firstMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Roll")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 5, 16, 12, 17, 823, DateTimeKind.Local).AddTicks(8256),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mehmet",
                            Roll = "1001"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 5, 16, 12, 17, 823, DateTimeKind.Local).AddTicks(8268),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ahmet",
                            Roll = "1002"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 4, 5, 16, 12, 17, 823, DateTimeKind.Local).AddTicks(8270),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Maho",
                            Roll = "1003"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 4, 5, 16, 12, 17, 823, DateTimeKind.Local).AddTicks(8272),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ümido",
                            Roll = "1004"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
