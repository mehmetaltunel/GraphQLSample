// <auto-generated />
using System;
using GraphQL.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GraphQL.DataAcess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230406124814_FirstCommit")]
    partial class FirstCommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 6, 15, 48, 14, 158, DateTimeKind.Local).AddTicks(4679),
                            Description = "alkol var",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Alkollü İçecek"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 6, 15, 48, 14, 158, DateTimeKind.Local).AddTicks(4690),
                            Description = "alkol yok",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Alkolsüz İçecek"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 4, 6, 15, 48, 14, 158, DateTimeKind.Local).AddTicks(4691),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gazlı İçecek"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 4, 6, 15, 48, 14, 158, DateTimeKind.Local).AddTicks(4693),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Meyve Suları"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
