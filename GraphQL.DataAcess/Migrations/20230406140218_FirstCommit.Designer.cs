// <auto-generated />
using System;
using GraphQL.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GraphQL.DataAcess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230406140218_FirstCommit")]
    partial class FirstCommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 6, 17, 2, 18, 732, DateTimeKind.Local).AddTicks(6731),
                            Description = "meyve suyu",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Meyve Suları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 6, 17, 2, 18, 732, DateTimeKind.Local).AddTicks(6744),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gazlı İçecek"
                        });
                });

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<float?>("ListingPrice")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Code = "CP2",
                            Description = "capy ailesine ait karışık meyve suyu",
                            ListingPrice = 20f,
                            Name = "Cappy Karışık",
                            Price = 14.5f
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Code = "CC1",
                            ListingPrice = 25f,
                            Name = "Coca Cola 1 Litre",
                            Price = 20.5f
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Code = "CC1",
                            ListingPrice = 35f,
                            Name = "Coca Cola 2.5 Litre",
                            Price = 30.5f
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Code = "F1",
                            Description = "fruko gazoz",
                            ListingPrice = 28f,
                            Name = "Fruko",
                            Price = 23.5f
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Code = "CP1",
                            Description = "capy ailesine ait şeftalili meyve suyu",
                            ListingPrice = 20f,
                            Name = "Cappy Şeftali",
                            Price = 14.5f
                        });
                });

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Product", b =>
                {
                    b.HasOne("GraphQL.DataAcess.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GraphQL.DataAcess.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
